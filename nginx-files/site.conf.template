# HTTP -> HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ${APP_HOST};
    return 301 https://$host$request_uri;
}

# HTTPS only
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ${APP_HOST};

    ssl_certificate ${CERTS_PATH}/fullchain.pem;
    ssl_certificate_key ${CERTS_PATH}/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;
    ssl_dhparam /usr/local/openresty/nginx/dhp-2048.pem;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    resolver 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    error_page 401 = @unauthorized;

    location @unauthorized {
        try_files /auth_error.json =401;
    }

    location ~ ^${API_PATH}?$ {
        default_type application/json;
        root   /usr/local/openresty/nginx/html;
        rewrite ^ /api.json;
    }

    location ${API_PATH} {
        access_by_lua_block {
            require("auth").validate()
        }

        include /usr/local/openresty/nginx/conf/conf.d/*.conf;
    }

    # For debug
    # error_log /var/log/nginx/error.log debug;
}
